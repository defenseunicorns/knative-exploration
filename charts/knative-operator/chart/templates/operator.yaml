# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative serving
    # automatically.
    - matchExpressions:
        - {key: serving.knative.dev/release, operator: Exists}
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated-stable
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative serving
    # automatically.
    - matchExpressions:
        - {key: app.kubernetes.io/name, operator: In, values: ["knative-serving"]}
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
rules:
  - apiGroups:
      - operator.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
  # Bootstrapping permissions.
  # Roles that are explicitly bound buch which are specified by this Operator
  # MUST be specified here with 'get' and 'bind'.
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    resourceNames:
      - system:auth-delegator
    verbs:
      - bind
      - get
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    resourceNames:
      - extension-apiserver-authentication-reader
    verbs:
      - bind
      - get
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - create
      - delete
      # Escalate is necessary in order to create a role using cluster role aggregation,
      # and to allow the Operator to bootstrap itself into the necessary set of
      # permissions, even as those continue to evolve upstream.
      - escalate
      - get
      - list
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - list
      - get
      - update
  # Permissions required for Knative controller
  # infra.
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - security.istio.io
      - apps
      - policy
    resources:
      - poddisruptionbudgets
      - peerauthentications
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  # Old resources that need cleaning up that are not in the knative-serving
  # namespace.
  - apiGroups:
      - ""
    resources:
      - services
      - deployments
      - horizontalpodautoscalers
    resourceNames:
      - knative-ingressgateway
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - config-controller
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    resourceNames:
      - knative-serving-operator
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - {key: eventing.knative.dev/release, operator: Exists}
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated-stable
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - {key: app.kubernetes.io/name, operator: In, values: ["knative-eventing"]}
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
rules:
  - apiGroups:
      - operator.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
  # Bootstrapping permissions.
  # Roles that are explicitly bound buch which are specified by this Operator
  # MUST be specified here with 'get' and 'bind'.
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - create
      - delete
      # Escalate is necessary in order to create a role using cluster role aggregation,
      # and to allow the Operator to bootstrap itself into the necessary set of
      # permissions, even as those continue to evolve upstream.
      - escalate
      - get
      - list
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - list
      - get
      - update
  # Permissions required for Knative controller
  # infra.
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - update
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - update
      - get
      - list
      - watch
      # Old resources that need cleaning up that are not in the knative-eventing
      # namespace.
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    resourceNames:
      - knative-eventing-operator
    verbs:
      - delete

---
{{- if .Values.serviceAccount.create -}}
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "knative-operator.serviceAccountName" . }}
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: Consider restriction of non-aggregated role to knativeservings namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-serving-operator
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated-stable
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-serving-operator-aggregated-stable
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
# TODO: Consider restriction of non-aggregated role to knativeeventing namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-eventing-operator
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated-stable
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.fullname" . }}-eventing-operator-aggregated-stable
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}

---
# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
rules:
  # For manipulating certs into secrets.
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "create"
      - "update"
      - "list"
      - "watch"
      - "patch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
rules:
  # For watching logging configuration and getting certs.
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
  # For manipulating certs into secrets.
  - apiGroups:
      - ""
    resources:
      - "namespaces"
    verbs:
      - "get"
      - "create"
      - "update"
      - "list"
      - "watch"
      - "patch"
  # finalizers are needed for the owner reference of the webhook
  - apiGroups:
      - ""
    resources:
      - "namespaces/finalizers"
    verbs:
      - "update"
  # For getting our Deployment so we can decorate with ownerref.
  - apiGroups:
      - "apps"
    resources:
      - "deployments"
    verbs:
      - "get"
  - apiGroups:
      - "apps"
    resources:
      - "deployments/finalizers"
    verbs:
      - update
  # For actually registering our webhook.
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "mutatingwebhookconfigurations"
      - "validatingwebhookconfigurations"
    verbs: &everything
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  # For leader election
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - "leases"
    verbs: *everything
  # Necessary for conversion webhook. These are copied from the serving
  # TODO: Do we really need all these permissions?
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---
{{- if .Values.webhook.serviceAccount.create -}}
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "knative-operator.webhook.serviceAccountName" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
  {{- with .Values.webhook.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

---
# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.webhook.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ include "knative-operator.webhook.fullname" . }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "knative-operator.webhook.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "knative-operator.webhook.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}

---
# Copyright 2022 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: operator-webhook-certs
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
# The data is populated at install time.

---
# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "knative-operator.webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "false"
        {{- with .Values.webhook.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "knative-operator.webhook.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "knative-operator.webhook.serviceAccountName" . }}
      containers:
        - name: operator-webhook
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: "{{ .Values.webhook.image.repository }}:{{ .Values.webhook.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: METRICS_DOMAIN
              value: knative.dev/operator
            - name: CONFIG_LOGGING_NAME
              value: {{ include "knative-operator.fullname" . }}-config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: {{ include "knative-operator.fullname" . }}-config-observability
            - name: WEBHOOK_NAME
              value: operator-webhook
            - name: WEBHOOK_PORT
              value: "8443"
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
          securityContext:
            {{- toYaml .Values.webhook.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.webhook.resources | nindent 12 }}
          readinessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          livenessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
            failureThreshold: 6
            initialDelaySeconds: 20
      {{- with .Values.webhook.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.webhook.podSecurityContext | nindent 8 }}
      {{- with .Values.webhook.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300

---
# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: operator-webhook
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
spec:
  ports:
    # Define metrics and profiling for them to be accessible within service meshes.
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    {{- include "knative-operator.webhook.selectorLabels" . | nindent 4 }}

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "knative-operator.fullname" . }}-config-logging
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Common configuration for all Knative codebase
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "ts",
          "levelKey": "level",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "msg",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "knative-operator.fullname" . }}-config-observability
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # logging.enable-var-log-collection defaults to false.
    # The fluentd daemon set will be set up to collect /var/log if
    # this flag is true.
    logging.enable-var-log-collection: false

    # logging.revision-url-template provides a template to use for producing the
    # logging URL that is injected into the status of each Revision.
    # This value is what you might use the the Knative monitoring bundle, and provides
    # access to Kibana after setting up kubectl proxy.
    logging.revision-url-template: |
      http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/discover?_a=(query:(match:(kubernetes.labels.serving-knative-dev%2FrevisionUID:(query:'${REVISION_UID}',type:phrase))))

    # If non-empty, this enables queue proxy writing request logs to stdout.
    # The value determines the shape of the request logs and it must be a valid go text/template.
    # It is important to keep this as a single line. Multiple lines are parsed as separate entities
    # by most collection agents and will split the request logs into multiple records.
    #
    # The following fields and functions are available to the template:
    #
    # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
    # representing an HTTP request received by the server.
    #
    # Response:
    # struct {
    #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
    #   Size    int       // An int representing the size of the response.
    #   Latency float64   // A float64 representing the latency of the response in seconds.
    # }
    #
    # Revision:
    # struct {
    #   Name          string  // Knative revision name
    #   Namespace     string  // Knative revision namespace
    #   Service       string  // Knative service name
    #   Configuration string  // Knative configuration name
    #   PodName       string  // Name of the pod hosting the revision
    #   PodIP         string  // IP of the pod hosting the revision
    # }
    #
    logging.request-log-template: '{"httpRequest": {"requestMethod": "{{`{{`}}.Request.Method{{`}}`}}", "requestUrl": "{{`{{`}}js .Request.RequestURI{{`}}`}}", "requestSize": "{{`{{`}}.Request.ContentLength{{`}}`}}", "status": {{`{{`}}.Response.Code{{`}}`}}, "responseSize": "{{`{{`}}.Response.Size{{`}}`}}", "userAgent": "{{`{{`}}js .Request.UserAgent{{`}}`}}", "remoteIp": "{{`{{`}}js .Request.RemoteAddr{{`}}`}}", "serverIp": "{{`{{`}}.Revision.PodIP{{`}}`}}", "referer": "{{`{{`}}js .Request.Referer{{`}}`}}", "latency": "{{`{{`}}.Response.Latency{{`}}`}}s", "protocol": "{{`{{`}}.Request.Proto{{`}}`}}"}, "traceId": "{{`{{`}}index .Request.Header "X-B3-Traceid"{{`}}`}}"}'

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. If non-empty, it enables queue proxy to send request metrics.
    # Currently supported values: prometheus, stackdriver.
    metrics.request-metrics-backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knative-operator.fullname" . }}
  labels:
    {{- include "knative-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "knative-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "knative-operator.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "knative-operator.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: METRICS_DOMAIN
              value: knative.dev/operator
            - name: CONFIG_LOGGING_NAME
              value: {{ include "knative-operator.fullname" . }}-config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: {{ include "knative-operator.fullname" . }}-config-observability
          ports:
            - name: metrics
              containerPort: 9090
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
